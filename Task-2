<!DOCTYPE html>
 <html lang="en">
 <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Stopwatch</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f4f4f4;
        }
        .stopwatch {
            text-align: center;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .time {
            font-size: 48px;
            margin-bottom: 20px;
        }
        .buttons button {
            font-size: 16px;
            margin: 5px;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .buttons button:hover {
            background-color: #ddd;
        }
        .laps {
            margin-top: 20px;
            max-height: 150px;
            overflow-y: auto;
        }
        .lap {
            background: #f9f9f9;
            padding: 5px 10px;
            border-radius: 5px;
            margin-bottom: 5px;
            border: 1px solid #ddd;
        }
    </style>
 </head>
 <body>
    <div class="stopwatch">
        <div class="time" id="display">00:00:00.000</div>
        <div class="buttons">
            <button id="start">Start</button>
            <button id="pause">Pause</button>
            <button id="reset">Reset</button>
            <button id="lap">Lap</button>
        </div>
        <div class="laps" id="laps"></div>
    </div>
    <script>
        let startTime, elapsedTime = 0, interval;
        const display = document.getElementById('display');
        const laps = document.getElementById('laps');
        function updateDisplay() {
            const time = new Date(elapsedTime);
            const minutes = time.getUTCMinutes().toString().padStart(2, '0');
            const seconds = time.getUTCSeconds().toString().padStart(2, '0');
            const milliseconds = time.getUTCMilliseconds().toString().padStart(3, '0');
            display.textContent = `${minutes}:${seconds}.${milliseconds}`;
        }
        document.getElementById('start').addEventListener('click', () => {
            if (!interval) {
                startTime = Date.now() - elapsedTime;
                interval = setInterval(() => {
                    elapsedTime = Date.now() - startTime;
                    updateDisplay();
                }, 10);
            }
        });
        document.getElementById('pause').addEventListener('click', () => {
            clearInterval(interval);
            interval = null;
        });
        document.getElementById('reset').addEventListener('click', () => {
            clearInterval(interval);
            interval = null;
            elapsedTime = 0;
            updateDisplay();
            laps.innerHTML = '';
        });
        document.getElementById('lap').addEventListener('click', () => {
            if (elapsedTime) {
                const lapTime = document.createElement('div');
                lapTime.classList.add('lap');
                lapTime.textContent = display.textContent;
            }
                laps.appendChild(lapTime);
        });
    </script>
 </body>
 </html>
